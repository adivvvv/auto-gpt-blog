#!/usr/bin/env php
<?php declare(strict_types=1);
// bin/article-generate
// Generate and save a new article via the feed service.

use App\FeedClient;
use App\Util;

require __DIR__ . '/../public/bootstrap.php';

$cfg = Util::loadConfig();
$lang = $cfg['lang'] ?? 'en';

$client = new App\FeedClient($cfg['feed_base_url'], $cfg['feed_api_key']);
$resp   = $client->generateArticle($lang);

// Pull top-level fields
$title   = (string)($resp['title'] ?? $resp['article']['title'] ?? 'Untitled');
$slug    = (string)($resp['slug']  ?? Util::slugify($title));
$summary = (string)($resp['summary'] ?? '');
$tags    = array_values(array_filter((array)($resp['tags'] ?? [])));
$refs    = (array)($resp['references'] ?? []);
$faqs    = (array)($resp['article']['faqs'] ?? $resp['faqs'] ?? []);

// Rebuild body_markdown from article.content[].paragraph
$paragraphs = [];
foreach ((array)($resp['article']['content'] ?? []) as $block) {
  $p = (string)($block['paragraph'] ?? '');
  if ($p !== '') $paragraphs[] = $p;
}
$body_md = trim(implode("\n\n", $paragraphs));

// Simple HTML body from paragraphs (safe)
$esc = static fn(string $s): string => htmlspecialchars($s, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8');
$paras_html = array_map(fn($p) => '<p>'.$esc($p).'</p>', $paragraphs);
$body_html  = implode("\n", $paras_html);

// PMIDs for the “Referenced studies” section
$pmids = [];
foreach ($refs as $r) {
  $pm = (string)($r['pmid'] ?? '');
  if ($pm !== '') $pmids[] = $pm;
}

$post = [
  'title'         => $title,
  'slug'          => $slug,
  'summary'       => $summary,
  'tags'          => $tags,
  'published_at'  => date('Y-m-d'),
  'body_markdown' => $body_md,
  'body'          => $body_html,
  'faqs'          => $faqs,
  'references'    => $refs,
  'pmids'         => $pmids,
];

// Write full post
$dir = realpath(__DIR__.'/..').'/data/posts';
@mkdir($dir, 0775, true);
file_put_contents($dir.'/'.$slug.'.json', json_encode($post, JSON_PRETTY_PRINT|JSON_UNESCAPED_UNICODE));

// Update index
$idxFile = realpath(__DIR__.'/..').'/data/posts.json';
$index = ['posts' => []];
if (is_file($idxFile)) {
  $index = json_decode((string)file_get_contents($idxFile), true) ?: ['posts'=>[]];
}
$index['posts'] = array_values(array_filter($index['posts'], fn($p) => ($p['slug'] ?? '') !== $slug));
array_unshift($index['posts'], [
  'title'        => $title,
  'slug'         => $slug,
  'summary'      => $summary,
  'tags'         => $tags,
  'published_at' => $post['published_at'],
]);
file_put_contents($idxFile, json_encode($index, JSON_PRETTY_PRINT|JSON_UNESCAPED_UNICODE));

printf("Saved post: %s (%s)\n", $title, $slug);